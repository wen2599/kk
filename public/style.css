/* public/style.css */
html, body {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden; /* Default to hidden, JS will manage for non-room views */
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    background-color: #f0f0f0;
    font-size: 16px; /* Base font size */
}

/* --- View Control Classes --- */
.hidden-view {
    display: none !important;
}
.view-block { /* For login, lobby views */
    display: block !important;
}
.view-flex { /* For roomView, gameOverOverlay */
    display: flex !important;
    flex-direction: column; /* Default for views that might use it like roomView */
}
.overlay.view-flex { /* Ensure overlay specific flex properties */
    justify-content: center;
    align-items: center;
}


.view {
    background-color: #fff;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    border-radius: 8px;
    margin: 10px auto;
    padding: 20px;
    box-sizing: border-box;
}

/* Login/Lobby specific styles */
#loginRegisterView, #lobbyView, #loadingView {
    width: 90%;
    max-width: 800px;
}
#loadingView.view-block {
    text-align: center;
    padding-top: 50px;
    font-size: 1.2em;
    color: #555;
}


#authFormContainer { display: flex; flex-wrap: wrap; justify-content: space-around; margin-bottom: 20px; gap: 15px; }
.formSection { border: 1px solid #ddd; padding: 15px; border-radius: 5px; width: 100%; max-width: 350px; box-sizing: border-box;}
.formSection h3 { margin-top: 0; }
input[type="text"], input[type="password"], input[type="tel"] { display: block; width: calc(100% - 22px); padding: 10px; margin-bottom: 10px; border: 1px solid #ccc; border-radius: 4px; font-size: 1em; }
button { padding: 10px 15px; background-color: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 1em; transition: background-color 0.2s ease; margin: 5px 0; }
button:hover { background-color: #0056b3; }
button:disabled { background-color: #ccc; cursor: not-allowed; color: #666; }
.inline-button { padding: 3px 8px; font-size: 0.8em; margin-left: 10px; vertical-align: middle; }
#roomList { border: 1px solid #eee; padding: 10px; min-height: 100px; max-height: 300px; overflow-y: auto; margin-top: 15px; background-color: #f9f9f9; }
.room-item { border-bottom: 1px dotted #ccc; padding: 8px 5px; display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 5px;}
.room-item:last-child { border-bottom: none; } .room-item span { margin-right: 10px; }
.room-item .status-waiting { color: orange; font-weight: bold; } .room-item .status-playing { color: red; font-weight: bold; } .room-item .status-finished { color: gray; }
.message { margin-top: 15px; font-weight: bold; text-align: center; font-size: 0.9em; min-height: 1.2em; padding: 5px; border-radius: 3px; }
.message.error { color: #721c24; background-color: #f8d7da; border: 1px solid #f5c6cb; }
.message.success { color: #155724; background-color: #d4edda; border: 1px solid #c3e6cb; }

/* Room View Fullscreen */
#roomView { width: 100%; height: 100%; max-width: none; margin: 0; border-radius: 0; padding: 5px; position: relative; box-shadow: none; }
#roomHeader { display: flex; justify-content: space-between; align-items: center; padding: 0 10px; flex-shrink: 0; border-bottom: 1px solid #eee; margin-bottom: 5px;}
#roomView h2 { margin: 5px 0; font-size: 1.1em; }
#gameModeDisplay { font-size: 0.9em; color: #555; margin-left: 15px; }
#leaveRoomButton { position: static; padding: 5px 10px; font-size: 0.8em; background-color: #dc3545; }
#leaveRoomButton:hover { background-color: #c82333; }
#roomStatusDisplay { text-align: center; font-size: 0.9em; color: #666; margin-bottom: 5px; flex-shrink: 0; }

/* Game Area Layout */
#gameArea { border: 1px solid #aaa; border-radius: 5px; flex-grow: 1; display: grid; grid-template-columns: 20% 1fr 20%; /* Adjusted for better spacing */ grid-template-rows: 25% 1fr 30%; /* Adjusted for better spacing */ gap: 5px; padding: 5px; overflow: hidden; min-height: 0; background-color: #e9e9e9;}
.playerArea { border: 1px dashed #ccc; padding: 5px; display: flex; flex-direction: column; align-items: center; justify-content: space-between; /* Changed to space-between */ position: relative; overflow: visible; /* Allow cards to slightly overflow for fan effect if needed */ min-width: 0; min-height: 0; background-color: #fff; border-radius: 3px;}
.playerHeader { display: flex; flex-direction: column; /* Stack name/role and info */ justify-content: center; align-items: center; width: 100%; flex-shrink: 0; margin-bottom: 3px; text-align: center;}
.playerName { font-weight: bold; font-size: 0.9em; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; margin-right: 0; /* Removed margin for centered text */ }
.playerRole { font-size: 0.8em; color: #888; font-style: italic; }
.playerInfo { font-size: 0.75em; color: #555; line-height: 1.2; flex-shrink: 0; width: 100%; margin-top: 2px; }
.playerInfo .ready { color: green; font-weight: bold; } .playerInfo .not-ready { color: orange; } .playerInfo .disconnected { color: red; font-style: italic; } .playerInfo .finished { color: gray; font-style: italic; }

.playerCards { /* This is the container for cards */
    display: flex;
    justify-content: center;
    align-items: center; /* Align items to center for single row before fanning */
    width: 100%;
    flex-grow: 1;
    min-height: 60px; /* Ensure some minimum height */
    position: relative; /* For absolute positioning of cards inside */
    padding-bottom: 5px; /* Space for card bottoms */
}

/* Styling for opponent hands specifically */
.opponentHand .card {
    position: absolute; /* Crucial for stacking and fanning */
    bottom: 5px; /* Position cards at the bottom of the .playerCards container */
    /* transform-origin will be set by JS */
}

/* Styling for my hand specifically */
.myHand { /* myHand is the .playerCards container for the current player */
    padding-bottom: 10px; /* More space for my larger cards potentially */
    align-items: flex-end; /* Align my cards to the bottom */
}
.myHand .card {
    position: relative; /* My cards are not absolute by default for easier selection */
    /* transform-origin will be set by JS for hover effects if needed */
    margin: 0 -15px; /* Negative margin to overlap cards horizontally, adjust as needed */
}
.myHand .card:first-child { margin-left: 0; }
.myHand .card:last-child { margin-right: 0; }


#playerAreaTop { grid-column: 2; grid-row: 1; }
#playerAreaTop .playerCards { justify-content: center; align-items: flex-start; } /* Opponent top: cards fan downwards/center */
#playerAreaTop .opponentHand .card { top: 5px; bottom: auto; }


#playerAreaLeft { grid-column: 1; grid-row: 2; }
#playerAreaLeft .playerCards { justify-content: flex-start; align-items: center; } /* Opponent left: cards fan rightwards/center */
#playerAreaLeft .opponentHand .card { left: 5px; bottom: 50%; transform: translateY(50%);}


#playerAreaRight { grid-column: 3; grid-row: 2; }
#playerAreaRight .playerCards { justify-content: flex-end; align-items: center; } /* Opponent right: cards fan leftwards/center */
#playerAreaRight .opponentHand .card { right: 5px; bottom: 50%; transform: translateY(50%);}

#playerAreaBottom { grid-column: 2; grid-row: 3; } /* Self area */


#centerArea { grid-column: 2; grid-row: 2; border: 1px solid #999; display: flex; flex-direction: column; align-items: center; justify-content: center; overflow: auto; padding: 5px; background-color: #fdfdfd; }
#centerArea > p { margin: 0 0 5px 0; font-size: 0.8em; flex-shrink: 0; color: #444; }
#centerPileArea { display: flex; flex-wrap: wrap; justify-content: center; align-items: center; width: 100%; flex-grow: 1; overflow-y: auto; min-height: 50px; padding: 5px; }
#lastHandTypeDisplay { font-size: 0.8em; color: #333; margin-top: 5px; font-style: italic; flex-shrink: 0; }

/* Card Styles */
.card {
    border: 1px solid black; border-radius: 4px;
    width: clamp(45px, 5vw, 60px); /* Slightly larger base, adjust as needed */
    height: calc(clamp(45px, 5vw, 60px) * 1.4); /* Aspect ratio */
    display: inline-flex; flex-direction: column; justify-content: space-between; align-items: center;
    /* margin is handled by .myHand .card or .opponentHand .card for overlaps */
    background-color: white; font-size: clamp(0.8em, 1.8vw, 1.1em); /* Slightly larger font */
    position: relative; /* Change from inline-flex if cards are absolutely positioned for fanning */
    overflow: hidden; flex-shrink: 0;
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; /* Smoother transition */
    -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;
    box-shadow: 1px 1px 3px rgba(0,0,0,0.2);
    transform-origin: bottom center; /* Default for potential fan effects */
}
.card.hidden { background-color: #4a90e2; background-image: url('/images/card-back.png'); background-size: cover; background-position: center; color: transparent; border-color: #357abd; }
.card.hidden .rank, .card.hidden .suit { display: none; }
.card .rank { font-weight: bold; line-height: 1; padding-top: 3px; }
.card .suit { font-size: 1.3em; line-height: 1; padding-bottom: 3px; }
.card.hearts .suit, .card.diamonds .suit, .card.hearts .rank, .card.diamonds .rank { color: red; }
.card.spades .suit, .card.clubs .suit, .card.spades .rank, .card.clubs .rank { color: black; }

.myHand .card { cursor: pointer; }
.myHand .card:hover { transform: translateY(-10px) scale(1.05); box-shadow: 0 6px 12px rgba(0,0,0,0.3); z-index: 100; } /* More pronounced hover */
.myHand .card.disabled { cursor: not-allowed; opacity: 0.7; }
.myHand .card.disabled:hover { transform: none; box-shadow: 1px 1px 3px rgba(0,0,0,0.2); }
.card.selected { border: 3px solid #007bff; box-shadow: 0 0 10px #007bff; transform: translateY(-8px) scale(1.03); } /* More pronounced selection */
.card.hinted { border: 3px dashed orange; box-shadow: 0 0 10px orange; transform: translateY(-4px); }

.playerArea.current-turn { border: 3px solid gold; box-shadow: 0 0 12px gold; z-index: 5; }
.my-actions { display: flex; justify-content: center; flex-wrap: wrap; padding: 5px 0; width: 100%; flex-shrink: 0; gap: 8px; margin-top: auto; /* Push actions to bottom of playerAreaBottom */ }
.my-actions button { font-size: 0.9em; padding: 6px 12px; }
#passTurnButton { background-color: #6c757d; } #passTurnButton:hover { background-color: #5a6268; }
#hintButton { background-color: #ffc107; color: #333; } #hintButton:hover { background-color: #e0a800; }
#sortHandButton { background-color: #17a2b8; } #sortHandButton:hover { background-color: #138496; }

#roomControls { margin-top: 5px; text-align: center; padding: 5px 0; flex-shrink: 0; }
#readyButton { font-size: 1.1em; padding: 10px 20px; }
#readyButton.ready { background-color: #28a745; } #readyButton.ready:hover { background-color: #218838; }
.view-inline-block { display: inline-block !important; }


.overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.6); z-index: 1000; }
.overlay-content { background-color: white; padding: 30px; border-radius: 8px; text-align: center; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3); max-width: 90%; width: 400px;}
.overlay-content h3 { margin-top: 0; }
#gameOverScores { margin-top: 15px; margin-bottom: 20px; text-align: left; }
#gameOverScores p { margin: 5px 0; font-size: 1.1em; }
#gameOverScores .score-plus { color: green; font-weight: bold; }
#gameOverScores .score-minus { color: red; font-weight: bold; }
#gameOverScores .score-zero { color: gray; }

/* Hand count display for opponents */
.hand-count-display {
    position: absolute;
    bottom: -18px; /* Adjust to be below the cards area */
    left: 50%;
    transform: translateX(-50%);
    font-size: 0.8em;
    color: #333;
    background-color: rgba(255, 255, 255, 0.7);
    padding: 2px 5px;
    border-radius: 3px;
    z-index: 5; /* Ensure it's above cards if they overlap */
}
#playerAreaTop .hand-count-display { bottom: auto; top: calc(100% + 2px); /* Below cards */ }
#playerAreaLeft .hand-count-display { left: auto; right: -25px; bottom: 50%; transform: translateY(50%); writing-mode: vertical-rl; text-orientation: mixed; }
#playerAreaRight .hand-count-display { right: auto; left: -25px; bottom: 50%; transform: translateY(50%); writing-mode: vertical-rl; text-orientation: mixed;}


/* Responsive Adjustments */
@media (max-width: 768px) {
    #gameArea {
        grid-template-columns: 1fr 1fr;
        grid-template-rows: auto 1fr auto auto;
    }
    #playerAreaTop { grid-column: 1 / -1; grid-row: 1; }
    #playerAreaLeft { grid-column: 1; grid-row: 2; }
    #playerAreaRight { grid-column: 2; grid-row: 2; }
    #centerArea { grid-column: 1 / -1; grid-row: 3; min-height: 100px; } /* Reduced min-height */
    #playerAreaBottom { grid-column: 1 / -1; grid-row: 4; }

    .card { width: clamp(40px, 7vw, 50px); height: calc(clamp(40px, 7vw, 50px) * 1.4); }
    .myHand .card { margin: 0 -12px; } /* Adjust overlap for smaller cards */
    .my-actions button { font-size: 0.8em; padding: 5px 10px; }
    .formSection { width: 100%; max-width: none;}
}

@media (max-width: 480px) {
    #gameArea {
        grid-template-columns: 1fr;
        grid-template-rows: auto auto auto 1fr auto;
    }
    #playerAreaTop { grid-column: 1; grid-row: 1; }
    #playerAreaLeft { grid-column: 1; grid-row: 2; min-height: 80px; } /* Ensure some space for vertical cards */
    #playerAreaRight { grid-column: 1; grid-row: 3; min-height: 80px; }
    #centerArea { grid-column: 1; grid-row: 4; min-height: 80px; }
    #playerAreaBottom { grid-column: 1; grid-row: 5; }

    .card { width: clamp(38px, 9vw, 45px); height: calc(clamp(38px, 9vw, 45px) * 1.4); }
    .myHand .card { margin: 0 -10px; } /* Further adjust overlap */
    .my-actions { gap: 5px; }
    .my-actions button { font-size: 0.75em; padding: 4px 8px; }
    #roomView h2 { font-size: 1em; }
    .overlay-content { width: 90%; padding: 20px;}
    #gameOverScores p { font-size: 1em; }
    .playerHeader { margin-bottom: 1px;}
    .playerInfo { font-size: 0.7em; }
    .hand-count-display { font-size: 0.7em; bottom: -15px;}
    #playerAreaLeft .hand-count-display, #playerAreaRight .hand-count-display { right: -20px; left: -20px; }

}
